@model arm_repairs_project.Models.Demands
@{
    ViewBag.Title = "Заявки на ремонт";
    Layout = "~/Views/Shared/_LayoutChief.cshtml";
}

@section styles {
    @Styles.Render("~/css/tablesorted")

    <style type="text/css">
        .tablesorter-bootstrap > tbody > tr > td,
        .tablesorter-bootstrap > thead > tr > th,
        .tablesorter-bootstrap > thead > tr > td,
        .tablesorter-bootstrap {
            border: none;
        }

        #students-removed {
            display: none;
        }

        a {
            cursor: pointer;
        }
    </style>
}

<h2>Заявки на ремонт</h2>
<div class="row">
    <div class="col-xs-12">
        <div class="form-group">
            <a href="@Url.Action("DemandCreate", "Chief")" class="btn btn-lg btn-primary"><i class="fa fa-plus" aria-hidden="true"></i> Новая заявка</a>
            <a href="#" class="btn btn-lg btn-warning reset_filter"><i class="fa fa-refresh" aria-hidden="true"></i> Сбросить фильтр</a>
        </div>
        @if (TempData["success"] != null)
        {
            <div class="alert alert-success">
                <p>@TempData["success"].ToString()</p>
            </div>
        }
        <div class="panel panel-default">
            <table class="table table-condensed table-hover table-responsive table-striped" id="demands">
                <colgroup>
                    <col class="col-width-50"/>
                    <col class="col-width-75"/>
                    <col/>
                    <col/>
                    <col/>
                    <col/>
                    <col/>
                    <col class="col-width-50"/>
                </colgroup>
                <thead>
                <tr>
                    <th>#</th>
                    <th>Дата</th>
                    <th class="filter-select filter-exact">Пользователь</th>
                    <th class="filter-select filter-exact">Исполнитель</th>
                    <th class="filter-select filter-exact">Приоритет</th>
                    <th class="filter-select filter-exact">Статус</th>
                    <th>Описание</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                @if (Model.DemandsList.Any())
                {
                    foreach (var demand in Model.DemandsList)
                    {
                        <tr>
                            <td>@demand.Id</td>
                            <td title="@demand.Date.ToString("G")">@demand.Date.ToString("d")</td>
                            <td>@demand.User.Fio</td>
                            <td>
                                @if (demand.Master != null)
                                {
                                    @demand.Master.Fio
                                }
                                else
                                {
                                    <span>Не указан</span>
                                }
                            </td>
                            <td>@demand.Priority.Caption</td>
                            <td>@demand.Status.Caption</td>
                            <td>@demand.DescriptionIssue</td>
                            <td>
                                <a href="@Url.Action("DemandEdit", "Chief", new {@id = demand.Id})" title="Редактировать"><i class="fa fa-pencil-square-o  fa-lg"></i></a>
                                <a href="@Url.Action("DemandDelete", "Chief", new {@id = demand.Id})" title="Удалить заявку"><i class="fa fa-times  fa-lg" aria-hidden="true"></i></a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="8" style="text-align: center">В системе не зарегистрированно ни одной заявки</td></tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/js/tablesorted")

    <script type="text/javascript">
        $(function () {
            $.tablesorter.themes.bootstrap = {
                // these classes are added to the table. To see other table classes available,
                // look here: http://getbootstrap.com/css/#tables
                table: 'table table-bordered table-striped',
                caption: 'caption',
                // header class names
                header: 'bootstrap-header', // give the header a gradient background (theme.bootstrap_2.css)
                sortNone: '',
                sortAsc: '',
                sortDesc: '',
                active: '', // applied when column is sorted
                hover: '', // custom css required - a defined bootstrap style may not override other classes
                // icon class names
                icons: '', // add "icon-white" to make them white; this icon class is added to the <i> in the header
                iconSortNone: 'bootstrap-icon-unsorted', // class name added to icon when column is not sorted
                iconSortAsc: 'glyphicon glyphicon-chevron-up', // class name added to icon when column has ascending sort
                iconSortDesc: 'glyphicon glyphicon-chevron-down', // class name added to icon when column has descending sort
                filterRow: '', // filter row class; use widgetOptions.filter_cssFilter for the input/select element
                footerRow: '',
                footerCells: '',
                even: '', // even row zebra striping
                odd: ''  // odd row zebra striping
            };


            $("#demands").tablesorter({
                headers: {
                    7: { filter: false, sorter: false, parser: false },
                },

                // this will apply the bootstrap theme if "uitheme" widget is included
                // the widgetOptions.uitheme is no longer required to be set
                theme: "bootstrap",

                widthFixed: true,

                headerTemplate: '{content} {icon}', // new in v2.7. Needed to add the bootstrap icon!

                // widget code contained in the jquery.tablesorter.widgets.js file
                // use the zebra stripe widget if you plan on hiding any rows (filter widget)
                widgets: ["uitheme", "filter", "zebra"],

                widgetOptions: {
                    //                    filter_columnFilters : true
                    // using the default zebra striping class name, so it actually isn't included in the theme variable above
                    // this is ONLY needed for bootstrap theming if you are using the filter widget, because rows are hidden
                    zebra: ["even", "odd"],

                    // reset filters button
                    filter_reset: ".reset",

                    // extra css class name (string or array) added to the filter element (input or select)
                    filter_cssFilter: "form-control",

                    // set the uitheme widget to use the bootstrap theme class names
                    // this is no longer required, if theme is set
                    // ,uitheme : "bootstrap

                    // reset filters button
                    filter_reset: ".reset_filter"
                }

            });
        })
    </script>
}